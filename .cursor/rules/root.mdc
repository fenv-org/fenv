---
description:
globs:
alwaysApply: true
---
# Global Rules

## General Documentation
- All documentation must be written in clear and concise English
- Use proper grammar and punctuation
- Keep documentation up-to-date
- Use consistent terminology
- Include examples where appropriate
- **All content must be written in English only. No other languages are allowed.**

## Commit Messages
- Write all commit messages in clear and concise English
- Use conventional commits format: `<type>(<scope>): <subject>`
- Types: feat, fix, docs, style, refactor, test, chore
- Write subject in present tense and imperative mood
- Keep subject line under 50 characters
- Separate subject from body with a blank line
- Wrap body at 72 characters
- Use body to explain what and why, not how
- Use bullet points for details
- Reference issues and pull requests when applicable
- **When writing multi-line commit messages in the terminal, you must always use `$(printf ...)` to safely pass newlines and special characters. Do not use multiple -m options or other workarounds.**

## Terminal Usage
- **You must always use `$(printf ...)` when handling multi-line strings in the terminal (especially in Cursor) to safely pass newlines and special characters. Do not use multiple -m options or other workarounds.**
- **When using GitHub CLI (gh), you must also use `$(printf ...)` for multi-line strings in the --body option to ensure proper formatting of PR descriptions and other multi-line content.**

## Markdown Files
- Use proper Markdown syntax
- Include a table of contents for long documents
- Use appropriate heading levels
- Include code blocks with language specification
- Use proper formatting for lists and tables
- Include links to related documentation

## Configuration Files
- Use consistent formatting
- Include comments for non-obvious settings
- Document all configuration options
- Use appropriate file extensions
- Follow file format standards

## License Files
- Use standard license templates
- Include copyright notices
- Specify license terms clearly
- Include license headers in files
- Document license requirements

## README Files
- Include project description
- Document installation instructions
- Include usage examples
- List dependencies
- Document configuration options
- Include contribution guidelines
- List maintainers and contacts

## Changelog
- Use consistent format
- Include version numbers
- Document all changes
- Include dates
- Categorize changes
- Link to related issues

## API Documentation
- Document all endpoints
- Include request/response examples
- Document error codes
- Include authentication requirements
- Document rate limits
- Include version information
