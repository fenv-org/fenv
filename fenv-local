#!/usr/bin/env bash
# Summary: Shows the currently selected local version or sets the local version.
# Usage: 
#  - fenv local [-s|--symlink]
#  - fenv local <version>

set -eo errexit
[[ -n "$FENV_DEBUG" ]] && set -x

for args in $@; do
  case "$args" in
    "-s" | "--symlink" )
      rebuild_symlink=1
      shift
      ;;

    * )
      if [[ "$args" =~ ^[0-9]+([.][0-9]+([.][0-9]+)?)?$ ]]; then
        version="$args"
      else
        abort "invalid version code: fenv local [-s|--symlink] [<version>]"
      fi
      ;;
  esac
done

function main() {
  local version="$1"
  if [[ -z "$version" ]]; then
    show_local_version
  else
    set_local_version $version
  fi
}

function abort() {
  >&2 echo "fenv: "$@
  exit 2
}

function show_local_version() {
  version_file=$(fenv-version-file)
  if fenv--is-global "$version_file"; then
    abort "fenv: no local version configiured for this directory"
  fi

  if [[ "$rebuild_symlink" -eq 1 ]]; then
    local_version=$(fenv-version-file-read "$version_file")
    make_symlink "$local_version"
    echo "$local_version"
  else
    fenv--ensure-local-version "$version_file" > /dev/null
    fenv-version-file-read "$version_file"
  fi
}

function set_local_version() {
  version="$1"
  if ! [[ "$version" =~ ^[0-9]+([.][0-9]+([.][0-9]+)?)?$ ]]; then
    abort "an invalid version code: '$version'"
  fi

  resolved_version=$(fenv-latest "$version")
  fenv-version-file-write "$FENV_DIR/.flutter-version" "$resolved_version"
  make_symlink "$resolved_version"
}

function make_symlink() {
  local local_version="$1"
  which_sdk=$(fenv-prefix "$local_version")
  rm -rf "$FENV_DIR/.flutter" &> /dev/null
  ln -s "$which_sdk" "$FENV_DIR/.flutter" &> /dev/null
}

main $@
