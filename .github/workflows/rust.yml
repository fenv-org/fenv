name: Rust

on:
  push:
    branches: [ "main" ]
    tags: ['v*.*.*']
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CRATE_NAME: fenv

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-on-ubuntu:
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          # - aarch64-unknown-linux-musl
          # - i686-unknown-linux-gnu
          # - i686-unknown-linux-musl
          # - i686-unknown-freebsd
          - x86_64-unknown-linux-gnu
          # - x86_64-unknown-linux-musl
          # - x86_64-unknown-freebsd
          # - x86_64-unknown-netbsd

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Cache
      uses: Swatinem/rust-cache@v2
      with:
        key: "${{ matrix.target }}"

    - name: Build debug
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --target ${{ matrix.target }}

    - name: Build release
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Test debug
      if: ${{ ! matrix.skip-test && ! matrix.codecov }}
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: test
        args: --target ${{ matrix.target }}

    - name: Test release
      if: ${{ ! matrix.skip-test }}
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: test
        args: --release --target ${{ matrix.target }}

  build-on-macos:
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
        include:
          - target: aarch64-apple-darwin
            skip-test: true
          - target: x86_64-apple-darwin
            codecov: true

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}
        components: llvm-tools-preview

    - name: Cache
      uses: Swatinem/rust-cache@v2
      with:
        key: "${{ matrix.target }}"

    - name: Build debug
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --target ${{ matrix.target }}

    - name: Build release
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Test debug
      if: ${{ ! matrix.skip-test }}
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --target ${{ matrix.target }}

    - name: Test release
      if: ${{ ! matrix.skip-test }}
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }}

    - name: Generate code coverage reports
      if: ${{ matrix.codecov }}
      run: tools/coverage.sh

    - name: Upload to codecov.io
      if: ${{ matrix.codecov }}
      uses: codecov/codecov-action@v3
      with:
        files: coverage/*.lcov
